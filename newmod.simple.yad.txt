#!/bin/bash

repo="http://www.puppyrus.org/~melvik/puppyrus/ftp/puppyrus/puppyrus-a/pra03/pfs"
sysdir=$(dirname $(realpath /mnt/live/porteus/modules))
tmpdir="/tmp/mod_update"
reportmess=""

# splitname <разбираемое имя файла> <переменная под имя> <переменная под версию>
# пример: splitname $pfsname modname modver
splitname(){
  local ver sver
  ver=$(echo "$1" \
        |sed 's/i[3-6]86\|x86[_-]64\|x64\|[Xx][Ff][_-]\?86\|[Qq][Tt]4/masq/g' \
        |grep -oE '[_-]([A-Za-z]{0,2}[0-9][a-z0-9]*[_.+-])+')
  local re1='\(.*\)' re2='\1' n=1 partver
  for partver in $ver ; do
     n=$(($n+1))
     partver=${partver%?}
     partver=${partver#?}
     re1="${re1}$partver\\(.*\\)"
     re2="${re2}.*\\$n"
     sver="${sver}${sver:+-}$partver"
  done
  export $2=$(echo "$1" |sed 's/'$re1'\.pfs/'$re2'\\.pfs/')
  export $3=$sver
}

# newer <версия1> <версия2> - версия1 больше/новее версии2 ?
newer(){ [ "$1" != "$2" -a $(echo -e "$1\n$2"|sort -V|tail -1) == "$1" ] ; }

# START
[ -d "$tmpdir" ] || mkdir -p "$tmpdir"
cd "$tmpdir"

wget -O >(sed -n 's/.*href="\(.*\.pfs\)".*/\1/p' >repolist.txt) "$repo" 2>&1 \
   |sed -nu 's/^/#/p;/%/s/^.* \+\([0-9]\+%\).*$/\1/p' \
   |yad --progress --title="Загрузка списка репозитория" \
        --height=200 --width=500 \
        --auto-close --auto-kill --enable-log --log-expanded

cat $( ls -1 /sys/fs/aufs/*/br[0-9]* ) \
   | sed -n 's|^.*/\.\?\(.*\.pfs\)=r.*$|\1|p' \
   | sort \
   | while read pfsname ; do
        splitname $pfsname modname modver
        for similarpfs in $(grep "$modname" repolist.txt |grep -v "$pfsname"); do
           splitname "$similarpfs" rname rver
           [ "$modname" == "$rname" ] && newer "$rver" "$modver" &&
              { modver="$rver"
                newmod="$similarpfs"
              }
        done
        [ "$newmod" ] && {
           echo "false"
           echo "$pfsname"
           echo "$newmod"
           newmod=""
        }
     done \
   | yad --title "Обновление модулей" \
         --height=340 --width=600 \
         --text "Следующие модули могут быть обновлены:" \
         --list --checklist \
         --separator="\n" \
         --column=:CHK \
         --column="Установлен" \
         --column="В репозитории" \
         --print-column=0 \
   | while read null && read oldmod && read newmod && read null; do
       wget -c --progress=dot "${repo}/${newmod}" 2>&1 \
       |sed -nu 's/^/#/p;/%/s/^.* \+\([0-9]\+%\).*$/\1/p' \
       |yad --progress --title="Загрузка $newmod" --height=200 --width=500 \
            --auto-close --auto-kill --enable-log #--log-expanded
       wget_status="${PIPESTATUS[0]}"
       [ $wget_status -gt 0 ] &&
         { echo "Сбой загрузки. $newmod загрузить не удалось"
           rm $newmod 2>/dev/null
           continue; }
       datetime=$(date)
       copied=""
       for oldmod_fp in $(find "$sysdir" -mindepth 2 -type f -name "$oldmod")
       do oldmod_dir=$(dirname "$oldmod_fp")
          mv "$oldmod_fp" "${oldmod_fp}.old" &&
             { echo "$oldmod_fp ==> ${oldmod}.old"
               echo "$datetime" >>"${oldmod_dir}/update.log"
               echo "${oldmod} ==> ${oldmod}.old" >>"${oldmod_dir}/update.log"
             } \
          && cp "$newmod" "$oldmod_dir" &&
               { copied="yes"
                 echo "$newmod ==> $oldmod_dir"
                 echo "$newmod added" >>"${oldmod_dir}/update.log"
               } \
          || { echo "$newmod не удалось перенести в ${oldmod_dir}"
               [ -f "${oldmod_fp}.old" -a ! -f "$oldmod_fp"  ] &&
                  mv "${oldmod_fp}.old" "$oldmod_fp"
             }
       done
       [ "$copied" ] && rm "$newmod"
     done \
     | while read mess \
             || { rm repolist.txt
                  files=$(ls -1)
                  [ "$files" ] &&
                    { reportmess="$reportmess\nСледующие модули были загружены, но не перенесены в директорию системы.\nПеренесите их вручную из $tmpdir"
                      reportmess="$reportmess\n$files"
                    }
                  [ "$reportmess" ] && ntf -w "Отчет" "$reportmess"
                  false
                }
       do
         reportmess="${reportmess}${mess}\n"
       done