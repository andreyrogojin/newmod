#!/bin/bash

repolist="/etc/sfs-get/www.list"
sysdir=$(dirname $(realpath /mnt/live/porteus/modules))
tmpdir="/tmp/mod_update"

# splitname <разбираемое имя файла> <переменная под имя> <переменная под версию>
# пример: splitname $pfsname modname modver
splitname(){
  local ver sver
  ver=$(echo "$1" \
        |sed 's/i[3-6]86\|x86[_-]64\|x64\|[Xx][Ff][_-]\?86\|[Qq][Tt]4/masq/g' \
        |grep -oE '[_-]([A-Za-z]{0,2}[0-9][a-z0-9]*[_.+-])+')
  local re1='\(.*\)' re2='\1' n=1 partver
  for partver in $ver ; do
     n=$(($n+1))
     partver=${partver%?}
     partver=${partver#?}
     re1="${re1}$partver\\(.*\\)"
     re2="${re2}.*\\$n"
     sver="${sver}${sver:+-}$partver"
  done
  declare -g $2=$(echo "$1" |sed 's/'$re1'\.pfs/'$re2'\\.pfs/')
  declare -g $3=$sver
}

# newer <версия1> <версия2> - версия1 больше/новее версии2 ?
newer(){ [ "$1" != "$2" -a $(echo -e "$1\n$2"|sort -V|tail -1) == "$1" ] ; }

INFORM="yad --text-info --title=\"Справка\" \
--width=480 --height=401 --button=gtk-ok <<.END
Отметьте какие модули вы хотите обновить и нажмите OK.
Модули будут загружены из репозитория и перенесены
туда же, где находятся старые.
Старые модули не удаляются, а получают расширение .old,
при необходимости вы их сможете вернуть.

Если директория системы недоступна (например, система
загружена в память и флешка отмонтирована),
загруженные файлы будут оставлены в $tmpdir
в таком случае перенесите их куда нужно вручную.

Для того, чтобы новые модули были подключены
к системе необходимо перезагрузиться, или отключить
старый модуль и подключить новый вручную.
(Старый модуль может быть занят, в таком случае
отключить его не получится).

Примечание.  Данная программа проверяет наличие
обновлений только тех модулей, которые сейчас подключены.
.END"

# START
[ -d "$tmpdir" ] || mkdir -p "$tmpdir"
cd "$tmpdir"
rm -f *.html repolist.txt newmodfound 2>/dev/null
[ "$(ls *.html repolist.txt newmodfound 2>/dev/null)" ] &&
         { echo "Не могу удалить временные файлы в $tmpdir"; exit 1; }

for repo in $(sed '/^[[:space:]]*#/d;/^[[:space:]]*$/d' "$repolist"); do
  wget -O index.html "$repo" 2>&1
  sed -n 's|%\([[:xdigit:]]\{2\}\)|\\\\x\1|g
          s|.*href="\(.*\.pfs\)".*|'$repo'/\1|p' index.html \
    | while read string ; do
          echo -e "$string"  # '%2b' -> "sed" -> '\x2b' -> "echo -e" -> '+'
      done >>repolist.txt
  rm index.html
done |sed -nu 's/^/#/p;/%/s/^.* \+\([0-9]\+%\).*$/\1/p' \
     | yad --progress --pulsate \
           --title="Загрузка списка файлов репозиториев" \
           --height=300 --width=600 --center \
           --auto-close --auto-kill --enable-log --log-expanded

unset newmod reportmess
cat $( ls -1 /sys/fs/aufs/*/br[0-9]* ) \
   | sed -n 's|^.*/\.\?\(.*\.pfs\)=r.*$|\1|p' \
   | sort \
   | while read pfsname ; do
        splitname $pfsname modname modver
        for similarpfs in $(grep "$modname" repolist.txt |grep -v "$pfsname"); do
           splitname $(basename "$similarpfs") rname rver
           [ "$modname" == "$rname" ] && newer "$rver" "$modver" &&
              { modver="$rver"
                newmod="$similarpfs"
                # echo "$newmod" >&2
              }
        done
        [ "$newmod" ] && {
           # если модуль есть в нескольких репозиториях - возьмем из первого по списку
           newmod=$(grep -m 1 $(basename "$newmod") repolist.txt)
           echo "false"
           echo "$pfsname"
           basename "$newmod"
           echo "$newmod"
           newmod=""
        }
     done >newmodfound

if [ -s newmodfound ] ; then
cat newmodfound | yad --title "Обновление модулей" \
                  --height=340 --width=600 --center \
                  --text "Следующие модули могут быть обновлены:" \
                  --list --checklist \
                  --separator="\n" \
                  --column=:CHK \
                  --column="Установлен" \
                  --column="В репозитории" \
                  --column="URL" \
                  --hide-column=4 \
                  --print-column=0 \
                  --button=gtk-ok --button=gtk-cancel \
                  --button=gtk-help:"/bin/sh -c \"$INFORM\""
else
    ntf -w "Обновленых модулей не найдено"
    exit 0
fi \
   | while read null &&
           read oldmod &&
           read newmod &&
           read newmod_url &&
           read null; do
       foundlocal=$(for i in $(find "$sysdir" -mindepth 2 -type f -name "$newmod")
                    do dirname $i; done)
       [ "$foundlocal" ] &&
          { echo "$newmod уже находится в" $foundlocal
            echo "$foundlocal" |grep -qE '/base|/modules' \
               && echo "Перегрузите систему для подключения" \
               || echo "Вы можете его подключить"
            continue
          }
       wget -c --progress=dot "${newmod_url}" 2>&1 \
       |sed -nu 's/^/#/p;/%/s/^.* \+\([0-9]\+%\).*$/\1/p' \
       |yad --progress --title="Загрузка $newmod" \
            --height=200 --width=500 --center \
            --auto-close --auto-kill --enable-log #--log-expanded
       wget_status="${PIPESTATUS[0]}"
       [ $wget_status -gt 0 ] &&
         { echo "Сбой загрузки. $newmod загрузить не удалось"
           rm $newmod 2>/dev/null
           continue; }
       datetime=$(date)
       copied=""
       for oldmod_fp in $(find "$sysdir" -mindepth 2 -type f -name "$oldmod")
       do oldmod_dir=$(dirname "$oldmod_fp")
          mv "$oldmod_fp" "${oldmod_fp}.old" &&
             { echo "$oldmod_fp ==> ${oldmod}.old"
               echo "$datetime" >>"${oldmod_dir}/update.log"
               echo "${oldmod} ==> ${oldmod}.old" >>"${oldmod_dir}/update.log"
             } \
          && cp "$newmod" "$oldmod_dir" &&
               { copied="yes"
                 echo "$newmod ==> $oldmod_dir"
                 echo "$newmod added" >>"${oldmod_dir}/update.log"
               } \
          || { echo "$newmod не удалось перенести в ${oldmod_dir}"
               [ -f "${oldmod_fp}.old" -a ! -f "$oldmod_fp"  ] &&
                  mv "${oldmod_fp}.old" "$oldmod_fp"
             }
       done
       [ "$copied" ] && rm "$newmod"
     done \
     | while read mess \
             || { rm newmodfound
                  files=$(ls -1 -I repolist.txt)
                  [ "$files" ] &&
                    { reportmess="$reportmess\nСледующие модули были загружены, но не перенесены в директорию системы.\nПеренесите их вручную из $tmpdir"
                      reportmess="$reportmess\n$files"
                    }
                  [ "$reportmess" ] && ntf -w "Отчет" "$reportmess" "\nЧтобы измеения вступили в силу, перезагрузите систему."
                  false
                }
       do
         reportmess="${reportmess}${mess}\n"
       done