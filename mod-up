#!/bin/bash
#160123 sfs
#160202 ander
repolist="/etc/sfs-get/www.list"        # список url репозиториев
sysdir=$(dirname $(realpath /mnt/live/porteus/modules))
tmpdir="/tmp/mod_update" ; export tmpdir  # экспорт - для работы справки
blacklistfile="$sysdir"/modules/mod-up.blacklist  # если новый модуль присутствует в этом списке - будет игнорироваться
etime=1800   # repolist.txt expire time. если свежее - не перекачивается

# splitname <разбираемое имя файла> <переменная под имя> <переменная под версию>
# пример: splitname $pfsname modname modver
splitname(){
  local ver sver
  ver=$(echo "$1" \
        |sed 's/i[3-6]86\|x86[_-]64\|x64\|[Xx][Ff][_-]\?86\|[Qq][Tt]4/masq/g
              s/_64/_masq/g' \
        |grep -oE '[_-]([A-Za-z]{0,2}[0-9][a-z0-9]*[_.+-])+')
  local re1='\(.*\)' re2='\1' n=1 partver
  for partver in $ver ; do
     n=$(($n+1))
     partver=${partver%?}
     partver=${partver#?}
     re1="${re1}$partver\\(.*\\)"
     re2="${re2}.*\\$n"
     sver="${sver}${sver:+-}$partver"
  done
  declare -g $2=$(echo "$1" |sed 's/'$re1'\.pfs/'$re2'\\.pfs/')
  declare -g $3=$sver
}

# newer <версия1> <версия2> - версия1 больше/новее версии2 ?
newer(){ [ "$1" != "$2" -a $(echo -e "$1\n$2"|sort -V|tail -1) == "$1" ] ; }

HELP(){
ntf -w "Поиск в репозитории обновленных версий подключенных модулей.pfs." \
"
Свежий модуль, по Вашему выбору, будет загружены в директорию с устаревшим модулем.
Устаревший модуль переименовывается в *.old.

Если эта директория недоступна для записи - загруженные свежие модули останутся в $tmpdir
Перенесите их вручную.

Чтобы изменения вступили в силу - перезагрузите систему.

Если вы хотите видеть предложение обновить именно на эту конкретную версию,
отметьте ее в правой колонке для занесения в черный список." >/dev/null
}; export -f HELP

# START
unset background
[ "$1" == "-b" ] && background="yes"
[ -d "$tmpdir" ] || mkdir -p -m 777 "$tmpdir"
cd "$tmpdir"
rm -f *.html newmodfound 2>/dev/null
[ "$(ls *.html newmodfound 2>/dev/null)" ] &&
         { echo "Не могу удалить временные файлы в $tmpdir"; exit 1; }

if [ ! -s repolist.txt ] ||
   [ $(( $(date "+%s") - $(date -r repolist.txt "+%s") )) -gt $etime ]; then
  [ -e repolist.txt ] &&
    { rm -f repolist.txt 2>/dev/null ||
      { echo "Не могу удалить старый $tmpdir/repolist.txt"; exit 1; }
    }
  for repo in $(sed '/^[[:space:]]*#/d;/^[[:space:]]*$/d' "$repolist"); do
    wget -O index.html "$repo" 2>&1
    sed -n 's|%\([[:xdigit:]]\{2\}\)|\\\\x\1|g
            s|.*href="\(.*\.pfs\)".*|'$repo'/\1|p' index.html \
      | while read string ; do
          echo -e "$string"  # '%2b' -> "sed" -> '\x2b' -> "echo -e" -> '+'
        done >>repolist.txt
    rm index.html
  done \
  |if [ ! "$background" ] ; then
     sed -nu 's/^/#/p;/%/s/^.* \+\([0-9]\+%\).*$/\1/p' \
     | yad --progress --pulsate \
	   --window-icon="gtk-refresh" \
           --title="Загрузка списка файлов репозиториев" \
           --height=300 --width=600 --center \
           --auto-close --auto-kill --enable-log --log-expanded
   else
     # wt -start "Загрузка списков репозиториев"
     cat >/dev/null
     # wt -kill
   fi
fi

unset newmod reportmess
num=0
cat $( ls -1 /sys/fs/aufs/*/br[0-9]* ) \
   | sed -n 's|^.*/\.\?\(.*\.pfs\)=r.*$|\1|p' \
   | sort \
   | while read pfsname ; do
        splitname $pfsname modname modver
        for similarpfs in $(grep "$modname" repolist.txt |grep -v "$pfsname"); do
           splitname $(basename "$similarpfs") rname rver
           [ "$modname" == "$rname" ] \
           && newer "$rver" "$modver" \
           && ! grep -q "$(basename "$similarpfs")" "$blacklistfile" 2>/dev/null \
           && { modver="$rver"   # берем, если имя пакета то же, версия новее и данный файл не в ЧС
                newmod="$similarpfs"
                newmod_basename=$(basename "$newmod")
              }
        done
        [ "$newmod" ] && {
           # если модуль есть в нескольких репозиториях - возьмем из первого по списку
           newmod=$(grep -m 1 "$newmod_basename" repolist.txt)
           echo "false"
           echo "$pfsname"
           echo "$newmod_basename"
           echo "$newmod"
           newmod=""
        }
        num=$(($num+1))
        echo "#Проверено $num" >&2
     done 2>&1 >newmodfound \
  |if [ ! "$background" ] ; then
      yad --progress --pulsate --center --image="gtk-refresh" \
          --no-buttons --text="<b>Идет поиск обновлений...</b>" \
          --auto-close --borders=15 --undecorated --skip-taskbar
   else
      # wt -start "Поиск обновленных модулей"
      cat >/dev/null
      # wt -kill
   fi

if [ -s newmodfound ] ; then
        cat newmodfound | yad --title "Обновление модулей.pfs" \
                  --height=340 --width=600 --center \
                  --text "Выберите модули для обновления\nСтарые модули будут переименованы в *.old" \
		  --window-icon="gtk-refresh" \
		  --image="gtk-refresh" --image-on-top \
                  --list --checklist \
                  --separator="\n" \
                  --column="Обновить":CHK \
                  --column="Подключен" \
                  --column="В репозитории" \
                  --column="URL" \
                  --column="в ЧС":CHK \
                  --hide-column=4 \
                  --print-column=0 \
                  --print-all \
                  --button=gtk-help:"/bin/sh -c HELP" \
                  --button="Обновить модули"\!gtk-refresh\!"Выбранные обновления будут загружены":0 \
                  --button=gtk-cancel:1
else
    [ "$background" ] && n=i || n=w
    ntf -$n "Поиск в репозитории обновленных версий подключенных модулей.pfs." "Обновлений не найдено" 
    exit 0
fi \
   | while read checked &&
           read oldmod &&
           read newmod &&
           read newmod_url &&
           read to_blacklist
           read null; do
       [ "$to_blacklist" == "TRUE" ] && echo "$newmod" >>"$blacklistfile" && continue
       [ "$checked" == "FALSE" ] && continue
       # может быть модуль уже загружен, но не подключен?
       foundinlocaldir=$(for i in $(find "$sysdir" -mindepth 2 -type f -name "$newmod")
                         do dirname $i; done)
       [ "$foundinlocaldir" ] &&
          { echo "$newmod уже находится в" $foundinlocaldir
            msg="Вы можете его подключить"
            for i in $foundinlocaldir; do
              echo "$i" | grep -qE '/base|/modules' \
              && { [ -e "$i/$oldmod" ] && mv "$i/$oldmod" "$i/${oldmod}.old"
                   msg="Перегрузите систему для подключения"
                 }
            done
            echo "$msg"
            continue
          }
       wget -c --progress=dot "${newmod_url}" 2>&1 \
       |sed -nu '/%/s/^.* \+\([0-9]\+%\).*$/\1/p;s/^/#/p' \
       |yad --progress --title="Загрузка $newmod" \
            --height=50 --width=300 --center \
            --window-icon="gtk-refresh" --image="gtk-refresh" \
            --auto-close --auto-kill #--enable-log #--log-expanded
       wget_status="${PIPESTATUS[0]}"
       [ $wget_status -gt 0 ] &&
         { echo "Сбой загрузки. $newmod загрузить не удалось"
           rm $newmod 2>/dev/null
           continue; }
       datetime=$(date)
       copied=""
       for oldmod_fp in $(find "$sysdir" -mindepth 2 -type f -name "$oldmod")
       do oldmod_dir=$(dirname "$oldmod_fp")
          cp "$newmod" "$oldmod_dir" &&
               { copied="yes"
                 echo "$newmod ==> $oldmod_dir"
                 echo "$datetime" >>"${oldmod_dir}/update.log"
                 echo "$newmod added" >>"${oldmod_dir}/update.log"
               } \
          && mv "$oldmod_fp" "${oldmod_fp}.old" &&
               { echo -e "${oldmod_dir}\n${oldmod} ==> ${oldmod}.old"
                 echo "${oldmod} ==> ${oldmod}.old" >>"${oldmod_dir}/update.log"
               } \
          ||  echo "$newmod не удалось перенести в ${oldmod_dir}"
       done
       [ "$copied" ] && rm "$newmod"
     done \
     | while read mess \
             || { rm -f newmodfound
                  files=$(ls -1 -I repolist.txt)
                  [ "$files" ] &&
                    { reportmess="$reportmess\nОбновлены модули:\n$files\nПеренесите их вручную из $tmpdir"
                      reportmess="$reportmess\nМодули загружены, но не перенесены в директорию с файлами системы."
                    }
                  [ "$reportmess" ] && ntf -w "Отчет обновления модулей.pfs" "$reportmess" \
                        "\nЧтобы изменения вступили в силу для автоматически загруженных модулей, перезагрузите систему. " \
                        "Если обновился модуль, подключенный вручную, переподключите его."
                  false
                }
       do
         reportmess="${reportmess}${mess}\n"
       done